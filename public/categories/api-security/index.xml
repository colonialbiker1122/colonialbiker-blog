<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API Security on Colonialbiker Blog Site</title>
    <link>//localhost:1313/categories/api-security/</link>
    <description>Recent content in API Security on Colonialbiker Blog Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Aug 2025 12:56:34 +0530</lastBuildDate>
    <atom:link href="//localhost:1313/categories/api-security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3 Pillars of API Security</title>
      <link>//localhost:1313/posts/3-pillars-of-api-security/</link>
      <pubDate>Sat, 02 Aug 2025 12:56:34 +0530</pubDate>
      <guid>//localhost:1313/posts/3-pillars-of-api-security/</guid>
      <description>&lt;h2 id=&#34;1-governance&#34;&gt;1. Governance&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Know your APIs&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Get full inventory of APIs : Purpose, owner, documentation etc.&lt;/li&gt;&#xA;&lt;li&gt;Standardise and enforce API deployment process&lt;/li&gt;&#xA;&lt;li&gt;Check for existence of shadow/ rogue APIs, proper validation, governance at gateway and marketplace.&lt;/li&gt;&#xA;&lt;li&gt;API Documentation : Mandatory&lt;/li&gt;&#xA;&lt;li&gt;API development standards: style guides, authentication requirements, versioning, PII tracking&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Threat modelling:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify APIs, business flows, data access paths&lt;/li&gt;&#xA;&lt;li&gt;Assess: vulnerabilities, logic flows, access controls, 3rd party risks&lt;/li&gt;&#xA;&lt;li&gt;Probability:&lt;/li&gt;&#xA;&lt;li&gt;Impact: Understand the damage/ loss/ consequences&lt;/li&gt;&#xA;&lt;li&gt;Mitigation: Develop plans to assess the risk and mitigation strategies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;OpenAPI specification AKA Swagger&lt;/li&gt;&#xA;&lt;li&gt;Design guides:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Authentication: Type (token/ certificate etc.), how to implement.&lt;/li&gt;&#xA;&lt;li&gt;Authorisation: Who has access to what&lt;/li&gt;&#xA;&lt;li&gt;Naming conventions: URIs as nouns, methods as verbs, pluralisation, hierarchy, case, language&lt;/li&gt;&#xA;&lt;li&gt;Error codes: status code, reference ID , human readable&lt;/li&gt;&#xA;&lt;li&gt;Versioning: when to increment, when not to&lt;/li&gt;&#xA;&lt;li&gt;Units/ formats/ standards: date/time, timezone&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-testing&#34;&gt;2. Testing&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Data security:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Access Control&lt;/li&gt;&#xA;&lt;li&gt;Excessive/ Sensitive Data Exposure&lt;/li&gt;&#xA;&lt;li&gt;File / directory exposure&lt;/li&gt;&#xA;&lt;li&gt;Encryption at rest&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Business logic:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cross-account access&lt;/li&gt;&#xA;&lt;li&gt;API function abuse&lt;/li&gt;&#xA;&lt;li&gt;RBAC: Role-based Access Control&lt;/li&gt;&#xA;&lt;li&gt;Pen-testing&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;API security&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unsecured endpoints&lt;/li&gt;&#xA;&lt;li&gt;Authentication exploits&lt;/li&gt;&#xA;&lt;li&gt;Enumeration&lt;/li&gt;&#xA;&lt;li&gt;Application DoS, Rate Limiting&lt;/li&gt;&#xA;&lt;li&gt;Missing SSL/ TLS issues&lt;/li&gt;&#xA;&lt;li&gt;Injection, fuzzing&lt;/li&gt;&#xA;&lt;li&gt;Server Side Request Forgery&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-monitoring&#34;&gt;3. Monitoring&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Runtime protection&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Policy enforcement&lt;/li&gt;&#xA;&lt;li&gt;Authentication&lt;/li&gt;&#xA;&lt;li&gt;Traffic filtering&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Threat detection&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fraudulent traffic&lt;/li&gt;&#xA;&lt;li&gt;Distributed attacks&lt;/li&gt;&#xA;&lt;li&gt;Incident Response&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Control validation&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Verify API controls&lt;/li&gt;&#xA;&lt;li&gt;Uncover anomalies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;API Discovery sources&#xA;&lt;ul&gt;&#xA;&lt;li&gt;API gateway&lt;/li&gt;&#xA;&lt;li&gt;Web Application Firewall&lt;/li&gt;&#xA;&lt;li&gt;Code repository&lt;/li&gt;&#xA;&lt;li&gt;Application crawling&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>OWASP API Security Top 10</title>
      <link>//localhost:1313/posts/owasp-api-security-top-10/</link>
      <pubDate>Wed, 23 Jul 2025 19:39:40 +0530</pubDate>
      <guid>//localhost:1313/posts/owasp-api-security-top-10/</guid>
      <description>&lt;h2 id=&#34;1-broken-object-level-authorisation&#34;&gt;1. Broken Object level Authorisation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Access data / objects belonging to other users.&lt;/li&gt;&#xA;&lt;li&gt;Attacker authenticates as user A and retrieves data of B&lt;/li&gt;&#xA;&lt;li&gt;Enforce data access controls at application logic layer&lt;/li&gt;&#xA;&lt;li&gt;Define data access policies and implement controls&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-broken-authentication&#34;&gt;2. Broken authentication&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Due to poorly implemented or missing security controls&lt;/li&gt;&#xA;&lt;li&gt;Weak password requirements, credential stuffing, authentication information in URLs, absence of token expiry validation, insecure password storage, no captcha/ rate limiting / lockout&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-broken-object-property-level-authorisation&#34;&gt;3. Broken object property level authorisation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Mass assignment : Ability to update object elements&lt;/li&gt;&#xA;&lt;li&gt;Excessive data exposure : reeling unnecessary sensitive data&lt;/li&gt;&#xA;&lt;li&gt;Eg. set account-type=premium&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-unrestricted-resource-consumption&#34;&gt;4. Unrestricted resource consumption&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Risk : DoS, performance impact, mass data harvesting.&lt;/li&gt;&#xA;&lt;li&gt;Missing / inadequate rate controls, execution timeouts, max-allocation memory/ files / upload size, excessive operations or records returned in a single request&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-broken-function-level-authentication&#34;&gt;5. Broken function level authentication&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Improperly modify objects (create/ update / delete) to escalate privileges, replace GET â†’ PUT / DELETE&lt;/li&gt;&#xA;&lt;li&gt;Modify parameters : role=admin, delete an invoice, set account balance = 0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;6-unrestricted-access-to-sensitive-business-flows&#34;&gt;6. Unrestricted access to sensitive business flows&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Application logic flow&lt;/li&gt;&#xA;&lt;li&gt;Implement fraudulent traffic detection and control&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;7-server-side-request-forgery&#34;&gt;7. Server side request forgery&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Exploiting URL inputs to make request to 3rd party server&lt;/li&gt;&#xA;&lt;li&gt;Eg. LFI , Malware downloaded from malicious sites&lt;/li&gt;&#xA;&lt;li&gt;Validate and sanitise all user-supplied info (URL params)&lt;/li&gt;&#xA;&lt;li&gt;Ensure communication only permitted with trusted resources&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;8-security-misconfiguration&#34;&gt;8. Security misconfiguration&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lack of security hardening, improperly configured permissions, missing security patches, CORS policy missing, use of bots to scan, detect and exploit misconfigurations&lt;/li&gt;&#xA;&lt;li&gt;Implement hardening procedures.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;9-improper-inventory-management&#34;&gt;9. Improper inventory management&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unauthorised API access via old/unused versions or through trusted 3rd parties&lt;/li&gt;&#xA;&lt;li&gt;Unpatched endpoints, outdated documentation, deploy/manage all APIs in gatewa&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;10-unsafe-consumption-of-apis&#34;&gt;10. Unsafe consumption of APIs&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3rd party APIs are exploited and then used to attack legitimate APIs relying on them.&lt;/li&gt;&#xA;&lt;li&gt;Validate data and evaluate security controls of 3rd APIs , encrypt API communication.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
