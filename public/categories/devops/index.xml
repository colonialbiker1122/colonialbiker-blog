<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Colonialbiker Blog Site</title>
    <link>//localhost:1313/categories/devops/</link>
    <description>Recent content in DevOps on Colonialbiker Blog Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Aug 2025 08:50:35 +0530</lastBuildDate>
    <atom:link href="//localhost:1313/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Microservices Paterrns</title>
      <link>//localhost:1313/posts/microservices-paterrns/</link>
      <pubDate>Sun, 10 Aug 2025 08:50:35 +0530</pubDate>
      <guid>//localhost:1313/posts/microservices-paterrns/</guid>
      <description>&lt;h3 id=&#34;1-single-page-application&#34;&gt;1. Single Page application&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Updates dynamically using backend calls to REST services&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-backend-for-frontend&#34;&gt;2. Backend for frontend&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Customised UI for different channels&lt;/li&gt;&#xA;&lt;li&gt;One backend types per user interface&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-strangler-pattern&#34;&gt;3. Strangler pattern&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Transform: Create new parallel site&lt;/li&gt;&#xA;&lt;li&gt;Coexist: Incrementally redirect for new functionalities&lt;/li&gt;&#xA;&lt;li&gt;Eliminate: Remove old functionality&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-service-discovery-pattern&#34;&gt;4. Service discovery pattern&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Provides flexibility&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-entity-and-aggregate-pattern&#34;&gt;5. Entity and aggregate pattern&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;E-commerce sites&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6-adapter-patterns&#34;&gt;6. Adapter patterns&lt;/h3&gt;</description>
    </item>
    <item>
      <title>12 Factor App Methodology</title>
      <link>//localhost:1313/posts/12-factor-app-methodology/</link>
      <pubDate>Sun, 10 Aug 2025 08:43:13 +0530</pubDate>
      <guid>//localhost:1313/posts/12-factor-app-methodology/</guid>
      <description>&lt;h3 id=&#34;1-codebbase&#34;&gt;1. Codebbase&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Version control system like Git&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-build-release-run&#34;&gt;2. Build, Release, Run&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Build: Transform codebase to executable unit&lt;/li&gt;&#xA;&lt;li&gt;Release: Combine build with config&lt;/li&gt;&#xA;&lt;li&gt;Run: Run the application&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3development-production-parity&#34;&gt;3.Development-Production parity&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Minimise difference between deployment/ production environment.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-dependencies&#34;&gt;4. Dependencies&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Explicitly declare all dependencies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-configuration&#34;&gt;5. Configuration&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Store configuration in environment variables&lt;/li&gt;&#xA;&lt;li&gt;Keep everything that varies between deployments in configurations&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6-backend-services&#34;&gt;6. Backend services&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Do not distinguish between local/ 3rd party services&lt;/li&gt;&#xA;&lt;li&gt;Access all services by a URL and credentials&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7-processes&#34;&gt;7. Processes&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Stateless&lt;/li&gt;&#xA;&lt;li&gt;Persistent data in a database&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;8port-binding&#34;&gt;8.Port binding&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Export services by a port binding&lt;/li&gt;&#xA;&lt;li&gt;Declare web server library as a dependency&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;9-concurrency&#34;&gt;9. Concurrency&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Scalability&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;10-disposability&#34;&gt;10. Disposability&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Minimal startup time and graceful termination&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11-logs&#34;&gt;11. Logs&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Treat logs as an event stream&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-admin-processes&#34;&gt;12. Admin processes&lt;/h3&gt;</description>
    </item>
    <item>
      <title>DevOps</title>
      <link>//localhost:1313/posts/devops/</link>
      <pubDate>Sun, 10 Aug 2025 08:29:38 +0530</pubDate>
      <guid>//localhost:1313/posts/devops/</guid>
      <description>&lt;h2 id=&#34;thinking-devops-social-coding-principles&#34;&gt;Thinking DevOps/ Social Coding Principles&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Working in small batches&lt;/li&gt;&#xA;&lt;li&gt;Git repository&lt;/li&gt;&#xA;&lt;li&gt;Minimum Viable Product&lt;/li&gt;&#xA;&lt;li&gt;Test-driven Development: Building the thing right&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Test cases drive the design&lt;/li&gt;&#xA;&lt;li&gt;Red, green, refactor&lt;/li&gt;&#xA;&lt;li&gt;Automate testing&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Behaviour-driven development: Building the right thing&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gherkin&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Given (some context)&lt;/li&gt;&#xA;&lt;li&gt;When (some event happens)&lt;/li&gt;&#xA;&lt;li&gt;Then (some testable outcome)&lt;/li&gt;&#xA;&lt;li&gt;And (more context, events, outcomes)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Add acceptance criteria to every user story&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Cloud native microservices&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Collection of stateless microservices&lt;/li&gt;&#xA;&lt;li&gt;Each service maintains own database&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Designing for failure:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Retry pattern&lt;/li&gt;&#xA;&lt;li&gt;Circuit breaker pattern&lt;/li&gt;&#xA;&lt;li&gt;Bulkhead pattern&lt;/li&gt;&#xA;&lt;li&gt;Chaos engineering: Monkey testing&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Netflix: Simian Army tools&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Pair programming&lt;/li&gt;&#xA;&lt;li&gt;Ephemeral infrastructure as code&lt;/li&gt;&#xA;&lt;li&gt;Automated self-service&lt;/li&gt;&#xA;&lt;li&gt;Feedback loops and data driven responses&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;working-devops&#34;&gt;Working DevOps&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Infrastructure as code&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Configuration Management Systems: Executable textual format&lt;/li&gt;&#xA;&lt;li&gt;Ancibel, Puppt, Chef&lt;/li&gt;&#xA;&lt;li&gt;Version control&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Ephemeral immutable infrastructure&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Transient, parallel infrastructure&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Immutable delivery via containers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous integration&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Short lived feature branches&lt;/li&gt;&#xA;&lt;li&gt;Each checkin is verified by automated build&lt;/li&gt;&#xA;&lt;li&gt;Committing regularly&lt;/li&gt;&#xA;&lt;li&gt;Build and test every pull request&lt;/li&gt;&#xA;&lt;li&gt;Run tests after each build&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;continuous-delivery&#34;&gt;Continuous delivery&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Build quality with rigorous checks&lt;/li&gt;&#xA;&lt;li&gt;Work in small batches&lt;/li&gt;&#xA;&lt;li&gt;Automate repetitive takes to computers&lt;/li&gt;&#xA;&lt;li&gt;Measure for actionable metrics, pursue improvement&lt;/li&gt;&#xA;&lt;li&gt;Everyone is responsible&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;continuous-deployment&#34;&gt;Continuous deployment&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Production + Automation&lt;/li&gt;&#xA;&lt;li&gt;Feature flags: Decouple deployment from activation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;social-metrics&#34;&gt;Social metrics&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Who is leveraging the code you are building?&lt;/li&gt;&#xA;&lt;li&gt;Whoâ€™s code are you leveraging ?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;measuring-devops&#34;&gt;Measuring DevOps&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reduce time to market&lt;/li&gt;&#xA;&lt;li&gt;Increase overall availability&lt;/li&gt;&#xA;&lt;li&gt;Reduce time to deploy&lt;/li&gt;&#xA;&lt;li&gt;Defects detected before production&lt;/li&gt;&#xA;&lt;li&gt;More efficient use of hardware infrastructure&lt;/li&gt;&#xA;&lt;li&gt;Quicker performance feedback&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Mean lead time&lt;/li&gt;&#xA;&lt;li&gt;Release frequency&lt;/li&gt;&#xA;&lt;li&gt;Change failure rate&lt;/li&gt;&#xA;&lt;li&gt;Mean time to recovery&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>//localhost:1313/posts/kubernetes/</link>
      <pubDate>Sat, 09 Aug 2025 09:41:41 +0530</pubDate>
      <guid>//localhost:1313/posts/kubernetes/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Automated deployment, scaling, management&lt;/li&gt;&#xA;&lt;li&gt;Pods: Smallest deployable compute object in kubernetes&lt;/li&gt;&#xA;&lt;li&gt;Services: exposes an app running on a set of pods&lt;/li&gt;&#xA;&lt;li&gt;Automated rollouts/ rollbacks&lt;/li&gt;&#xA;&lt;li&gt;Storage orchestration: local/ network/ public cloud&lt;/li&gt;&#xA;&lt;li&gt;Horizontal scaling: metrics/ commands&lt;/li&gt;&#xA;&lt;li&gt;Automated bin packaging&lt;/li&gt;&#xA;&lt;li&gt;Secret and configuration management&lt;/li&gt;&#xA;&lt;li&gt;IPv4/ IPv6 stack&lt;/li&gt;&#xA;&lt;li&gt;Batch/ continuous integration workloads&lt;/li&gt;&#xA;&lt;li&gt;Self-healing&lt;/li&gt;&#xA;&lt;li&gt;Service discovery and load balancing&lt;/li&gt;&#xA;&lt;li&gt;Extensibility&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;kubernetes-control-plane&#34;&gt;Kubernetes Control Plane&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kube-api-server: All communications in cluster utilize this API&lt;/li&gt;&#xA;&lt;li&gt;etcd: Distributed key-value store containing all cluster data (deployment configs, desired states, meta data etc)&lt;/li&gt;&#xA;&lt;li&gt;kube-scheduler: assigns new pods to nodes&lt;/li&gt;&#xA;&lt;li&gt;kube-controller-manager: Monitor and control cluster state&lt;/li&gt;&#xA;&lt;li&gt;cloud-controller-manager: interact with cloud providers. Link clusters to cloud providerâ€™s API&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;kubernetes-worker-plane&#34;&gt;Kubernetes Worker Plane&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kubelet-communicates with kube-api-server&lt;/li&gt;&#xA;&lt;li&gt;Container runtime: Docker, podman, etc&lt;/li&gt;&#xA;&lt;li&gt;Kube-proxy: Network proxy&lt;/li&gt;&#xA;&lt;li&gt;Node: Worker machine (physical/ virtual)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Container Orchestration</title>
      <link>//localhost:1313/posts/container-orchestration/</link>
      <pubDate>Sat, 09 Aug 2025 09:38:03 +0530</pubDate>
      <guid>//localhost:1313/posts/container-orchestration/</guid>
      <description>&lt;h2 id=&#34;container-orchestration&#34;&gt;Container Orchestration&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Container lifecycle: (automation of lifecycle is orchestration)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Deployment&lt;/li&gt;&#xA;&lt;li&gt;Management&lt;/li&gt;&#xA;&lt;li&gt;Scaling&lt;/li&gt;&#xA;&lt;li&gt;Networking&lt;/li&gt;&#xA;&lt;li&gt;Availability&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Configuration files: YAML/JSON. Stores resources, network, logs etc&lt;/li&gt;&#xA;&lt;li&gt;Deployment scheduling : Finds the right host based on predefined settings&lt;/li&gt;&#xA;&lt;li&gt;Manage container lifecycle: System parameters, file parameters&lt;/li&gt;&#xA;&lt;li&gt;Scaling and productivity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker swarm&lt;/li&gt;&#xA;&lt;li&gt;Kubernetes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;benefits&#34;&gt;Benefits&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Increased production&lt;/li&gt;&#xA;&lt;li&gt;Faster deployment&lt;/li&gt;&#xA;&lt;li&gt;Reduced costs&lt;/li&gt;&#xA;&lt;li&gt;Stronger security&lt;/li&gt;&#xA;&lt;li&gt;Easier scaling&lt;/li&gt;&#xA;&lt;li&gt;Faster recovery&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Introduction to Docker</title>
      <link>//localhost:1313/posts/docker/</link>
      <pubDate>Sat, 09 Aug 2025 09:03:43 +0530</pubDate>
      <guid>//localhost:1313/posts/docker/</guid>
      <description>&lt;h2 id=&#34;container-characteristics&#34;&gt;Container characteristics&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Container engine virtualises OS&lt;/li&gt;&#xA;&lt;li&gt;Container is light-weight, fast, isolated, portable and secure&lt;/li&gt;&#xA;&lt;li&gt;Binaries, libraries within container enable apps to run&lt;/li&gt;&#xA;&lt;li&gt;Platform independent: cloud/ on-premises etc&lt;/li&gt;&#xA;&lt;li&gt;OS independent: Windows/ Linux&lt;/li&gt;&#xA;&lt;li&gt;Language independent&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;container-vendors&#34;&gt;Container vendors&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker: Robust&lt;/li&gt;&#xA;&lt;li&gt;Podman: More-secure&lt;/li&gt;&#xA;&lt;li&gt;LXC: data-intensive&lt;/li&gt;&#xA;&lt;li&gt;Vagrant: High isolation-level&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Build: create container image from dockerfile&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
